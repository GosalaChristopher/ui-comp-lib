{"version":3,"sources":["reportWebVitals.js","components/index.js","components/ContactCard/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","componentMap","component","config","variant","useState","containerClass","setContainerClass","avatarClass","setAvatarClass","contentClass","setContentClass","descriptionClass","setDescriptionClass","nameClass","setNameClass","titleClass","setTitleClass","useEffect","className","src","alt","width","height","description","name","title","MutationObserver","nodes","forEach","node","addedNodes","domRef","tag","nodeName","toLowerCase","getAttribute","console","log","attributes","Component","attr","props","i","length","val","nodeValue","JSON","parse","error","setAttribute","ReactDOM","render","StrictMode","observe","document","getElementById","childList","subtree"],"mappings":"+LAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sBCLDQ,EAAe,CAC1B,eAAgB,CACdC,UCFgB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC7B,EAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAgDN,mBAAS,IAAzD,mBAAOO,EAAP,KAAyBC,EAAzB,KACA,EAAkCR,mBAAS,IAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KAiCA,OA/BAC,qBAAU,WACR,OAAOd,GACL,IAAK,UACHG,EAAkB,8BAClBE,EAAe,kCACfE,EAAgB,kBAChBE,EAAoB,yBACpBE,EAAa,iBACbE,EAAc,iBACd,MAEF,IAAK,WACHV,EAAkB,6CAClBE,EAAe,oEACfE,EAAgB,kDAChBE,EAAoB,yBACpBE,EAAa,iBACbE,EAAc,iBACd,MAEF,QACEV,EAAkB,sCAClBE,EAAe,yCACfE,EAAgB,uBAChBE,EAAoB,IACpBE,EAAa,WACbE,EAAc,oBAGjB,CAACb,IAGF,yBAAQe,UAAWb,EAAnB,UACE,qBAAKa,UAAWX,EAAaY,KAAW,OAANjB,QAAM,IAANA,OAAA,EAAAA,EAAQiB,MAAO,cAAeC,IAAI,GAAGC,MAAM,MAAMC,OAAO,QAC1F,sBAAKJ,UAAWT,EAAhB,UACE,qCACE,mBAAGS,UAAWP,EAAd,gBAAiCT,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAQqB,gBAE3C,6BAAYL,UAAU,cAAtB,UACE,qBAAKA,UAAWL,EAAhB,gBAA4BX,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAQsB,OACpC,qBAAKN,UAAWH,EAAhB,gBAA6Bb,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAQuB,oBCA9B,IAAIC,kBA1CD,SAACC,GACnBA,EAAMC,SAAQ,SAACC,GACbA,EAAKC,WAAWF,SAAQ,SAAAG,GACtB,IAAMC,EAAMD,EAAOE,SAASC,cAE5B,IAAKH,EAAOI,aAAa,gBAAkBnC,EAAagC,GAAM,CAAC,IAAD,EAC5DI,QAAQC,IAAIN,GAEZK,QAAQC,IAAIN,EAAOO,aACnB,EAAAF,SAAQC,IAAR,oBAAeN,EAAOO,aAOtB,IALA,IAAMC,EAAYvC,EAAagC,GAAK/B,UAC9BuC,EAAOT,EAAOO,WAEdG,EAAQ,GAELC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAAK,CACpC,IAAIE,EAAMJ,EAAKE,GAAGG,UAElB,IACED,EAAME,KAAKC,MAAMP,EAAKE,GAAGG,WACzB,MAAOG,IAITP,EAAMD,EAAKE,GAAGlB,MAAQoB,EAGxBb,EAAOkB,aAAa,eAAe,GAEnCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,eAAeE,MAEjBV,aAUDsB,QAAQC,SAASC,eAAe,QAAS,CAAEjB,YAAY,EAAMkB,WAAW,EAAMC,SAAS,IAMhGlE,M","file":"static/js/main.f73d957c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ContactCard from \"./ContactCard\";\n\nexport const componentMap = {\n  'contact-card': {\n    component: ContactCard\n  },\n}\n","import { useEffect, useState } from \"react\";\n\nconst ContactCard = ({ config, variant }) => {\n  const [containerClass, setContainerClass] = useState('');\n  const [avatarClass, setAvatarClass] = useState('');\n  const [contentClass, setContentClass] = useState('');\n  const [descriptionClass, setDescriptionClass] = useState('');\n  const [nameClass, setNameClass] = useState('');\n  const [titleClass, setTitleClass] = useState('');\n\n  useEffect(() => {\n    switch(variant) {\n      case 'default' : {\n        setContainerClass('bg-gray-100 rounded-xl p-8');\n        setAvatarClass('w-32 h-32 rounded-full mx-auto');\n        setContentClass('pt-6 space-y-4');\n        setDescriptionClass('text-lg font-semibold');\n        setNameClass('text-blue-600');\n        setTitleClass('text-blue-300');\n        break;\n      }\n      case 'business': {\n        setContainerClass('md:flex bg-gray-100 rounded-xl p-8 md:p-0');\n        setAvatarClass('w-32 h-32 md:w-48 md:h-auto md:rounded-none rounded-full mx-auto');\n        setContentClass('pt-6 md:p-8 text-center md:text-left space-y-4');\n        setDescriptionClass('text-lg font-semibold');\n        setNameClass('text-blue-600');\n        setTitleClass('text-blue-300');\n        break;\n      }\n      default: {\n        setContainerClass('md:flex bg-gray-100 rounded-xl p-4');\n        setAvatarClass('w-32 h-30 rounded-full mx item-center');\n        setContentClass('pt-1 space-y-4 pl-4');\n        setDescriptionClass('');\n        setNameClass('text-lg');\n        setTitleClass('text-gray-400');\n      }\n    }\n  }, [variant]);\n\n  return (\n    <figure className={containerClass}>\n      <img className={avatarClass} src={config?.src || \"/avatar.jpg\"} alt=\"\" width=\"384\" height=\"512\" />\n      <div className={contentClass}>\n        <blockquote>\n          <p className={descriptionClass}>{config?.description}</p>\n        </blockquote>\n        <figcaption className=\"font-medium\">\n          <div className={nameClass}>{config?.name}</div>\n          <div className={titleClass}>{config?.title}</div>\n        </figcaption>\n      </div>\n    </figure>\n  )\n};\n\nexport default ContactCard;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nimport { componentMap } from './components';\n\n\nconst onDOMChange = (nodes) => {\n  nodes.forEach((node) => {\n    node.addedNodes.forEach(domRef => {\n      const tag = domRef.nodeName.toLowerCase();\n\n      if (!domRef.getAttribute('bootstraped') && componentMap[tag]) {\n        console.log(domRef);\n  \n        console.log(domRef.attributes);\n        console.log(...domRef.attributes)\n        \n        const Component = componentMap[tag].component;\n        const attr = domRef.attributes;\n        \n        const props = {};\n\n        for (let i = 0; i < attr.length; i++) {\n          let val = attr[i].nodeValue;\n\n          try {\n            val = JSON.parse(attr[i].nodeValue);\n          } catch (error) {\n            // attribute value was not a JSON\n          }\n\n          props[attr[i].name] = val;\n        }\n\n        domRef.setAttribute('bootstraped', true);\n        \n        ReactDOM.render(\n          <React.StrictMode>\n            <Component {...props} />    \n          </React.StrictMode>,\n          domRef\n        );\n      }\n    })\n  });\n  \n};\n\nconst observer = new MutationObserver(onDOMChange);\n\nobserver.observe(document.getElementById('root'), { attributes: true, childList: true, subtree: true });\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}